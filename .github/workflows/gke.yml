# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-test
  GKE_REGION: europe-west1
  DEPLOYMENT_NAME_FRONT: gke-test-front
  DEPLOYMENT_NAME_BACK: gke-test-back
  DEPLOYMENT_NAME_DB: gke-test-db
  IMAGE_FRONT: gke-test-front
  IMAGE_BACK: gke-test-back

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_REGION"
      # Build the Docker front image
      - name: Build front
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE_FRONT:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker front image to Google Container Registry
      - name: Publish front
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE_FRONT:$GITHUB_SHA"
      # Build the Docker back image
      - name: Build back
        working-directory: ./backend
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE_BACK:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker back image to Google Container Registry
      - name: Publish back
        working-directory: ./backend
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE_BACK:$GITHUB_SHA"
      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Deploy the Docker images to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE_FRONT:TAG=gcr.io/$PROJECT_ID/$IMAGE_FRONT:$GITHUB_SHA
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE_BACK:TAG=gcr.io/$PROJECT_ID/$IMAGE_BACK:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME_DB
          kubectl rollout status deployment/$DEPLOYMENT_NAME_BACK
          kubectl rollout status deployment/$DEPLOYMENT_NAME_FRONT
          kubectl get services -o wide
